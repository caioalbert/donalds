generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id             String         @id @default(uuid())
  name           String
  slug           String
  description    String
  avatarImageUrl String
  coverImageUrl  String
  menuCategory   MenuCategory[]
  products       Product[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  order order[]
}

model MenuCategory {
  id           String    @id @default(uuid())
  name         String
  restaurantId String
  products     Product[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
}

model Product {
  id             String         @id @default(uuid())
  name           String
  description    String
  price          Float
  imageUrl       String
  ingredients    String[]
  orderProducts  orderProduct[]
  restaurantId   String
  menuCategoryId String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  restaurant   Restaurant   @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  menuCategory MenuCategory @relation(fields: [menuCategoryId], references: [id], onDelete: Cascade)

  order order[]
}

model order {
  id                Int               @id @default(autoincrement())
  total             Float
  status            orderStatus
  consumptionMethod consumptionMethod
  restaurantId      String
  products          Product[]
  orderProducts     orderProduct[]
  userId            String
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
}

model orderProduct {
  id        Int      @id @default(autoincrement())
  productId String
  orderId   Int
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  order   order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

enum orderStatus {
  PENDING
  IN_PREPARATION
  FINISHED
  CANCELLED
}

enum consumptionMethod {
  TAKEAWAY
  DINE_IN
}
